const fs = require("fs");
const path = require("path");

const initialPath = fs.realpathSync(__dirname);

const monthsAmount = 6;

const dryRun = false;

const monthsMs = 1000 * 60 * 60 * 24 * 28 * monthsAmount;

const nowDateMs = new Date().getMilliseconds();

const dirStats = (directory) => {
  const files = fs.readdirSync(directory);
  const stats = files.reduce((acc, file) => {
    const stat = fs.statSync(path.join(directory, file));
    if (stat.isDirectory()) {
      acc.push(...dirStats(path.join(directory, file)));
    } else acc.push(stat);
    return acc;
  }, []);

  return stats;
};

const dirSize = (directory) => {
  const bytes = dirStats(directory).reduce((acc, { size }) => acc + size, 0);
  const units = ["B", "kB", "MB", "GB"];
  let current = bytes;
  for (let i = 0; i < units.length; i++) {
    current = bytes / Math.pow(1024, i);
    if (current < 1024) {
      return current.toFixed(2) + " " + units[i];
    }
  }
  return current.toFixed(2) + " GB";
};

function deleteNodeModules(p, diffDate = new Date()) {
  const dirItems = fs.readdirSync(p);
  for (const item of dirItems) {
    const itemPath = path.join(p, item);
    const stats = fs.lstatSync(itemPath);
    const diff = nowDateMs - new Date(stats.ctime).getMilliseconds();
    if (!stats.isDirectory()) {
      continue;
    }
    if (item === "node_modules") {
    if (diff < monthsMs) continue;
      const y = diffDate.getFullYear() - 1970;
      console.log(
        `deleting (not modified for ${
          y > 0 ? diffDate.getFullYear() - 1970 + " years, " : ""
        }${
          diffDate.getMonth()
        } months, ${diffDate.getDate()} days) ( ${dirSize(itemPath)} ) :`,
        itemPath
      );

      if (!dryRun) fs.rmSync(itemPath, { recursive: true, force: true });

      continue;
    }

    deleteNodeModules(itemPath, new Date(diff));
  }
}

if (dryRun) console.log("running in dry-run mode");
console.log(
  `about to delete every node_modules folder more than ${monthsAmount} months old`
);
deleteNodeModules(initialPath);
if (dryRun) console.log("dry-run complete. No changes were made");
