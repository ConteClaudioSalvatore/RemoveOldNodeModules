const fs = require("fs");
const path = require("path");

const initialPath = fs.realpathSync(__dirname);

const monthsAmount = 6;

const dryRun = true;

const monthsMs = 1000 * 60 * 60 * 24 * 28 * monthsAmount;

const nowDate = new Date();
const monthsDate = new Date(monthsMs);

const dirStats = (directory, maxDepht = 30) => {
  if (maxDepht < 1) return [];
  const files = fs.readdirSync(directory);
  const sizes = [];
  for (const file of files) {
    const stat = fs.statSync(path.join(directory, file));
    if (stat.isDirectory()) {
      for (const size in dirStats(path.join(directory, file), maxDepht - 1))
        sizes.push(size);
    } else sizes.push(stat.size);
  }
  return sizes;
};

const dirSize = (directory) =>
  dirStats(directory).reduce((acc, size) => acc + size, 0);

const bytesToUnits = (bytes) => {
  const units = ["kB", "MB", "GB"];
  let current = bytes;
  for (let i = 0; i < units.length; i++) {
    current = bytes / Math.pow(1024, i);
    if (current < 1024) {
      return current.toFixed(2) + " " + units[i];
    }
  }
  return current.toFixed(2) + " GB";
};

const sizesPromises = [];

function deleteNodeModules(p, diffDate = new Date()) {
  const dirItems = fs.readdirSync(p);
  for (const item of dirItems) {
    const itemPath = path.join(p, item);
    const stats = fs.statSync(itemPath);
    if (!stats.isDirectory()) {
      continue;
    }
    if (item === "node_modules") {
      if (diffDate < monthsDate) continue;
      const y = diffDate.getFullYear() - 1970;
      console.log(
        `deleting (not modified for ${
          y > 0 ? diffDate.getFullYear() - 1970 + " years, " : ""
        }${diffDate.getMonth()} months, ${diffDate.getDate()} days):`,
        itemPath
      );
      sizesPromises.push(new Promise((resolve) => resolve(dirSize(itemPath))));

      if (!dryRun) fs.rmSync(itemPath, { recursive: true, force: true });

      continue;
    }

    const diff = nowDate - stats.mtime;
    deleteNodeModules(itemPath, new Date(diff));
  }
}

if (dryRun) console.log("running in dry-run mode");
console.log(
  `about to delete every node_modules folder more than ${monthsAmount} months old`
);
deleteNodeModules(initialPath);
Promise.all(sizesPromises).then((sizes) => {
  console.log(
    `deleted ${sizes.length} node_modules folders, total size: ${bytesToUnits(
      sizes.reduce((acc, size) => acc + size / 1024, 0)
    )}`
  );
});
if (dryRun) console.log("dry-run complete. No changes were made");
